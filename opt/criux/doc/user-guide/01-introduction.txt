= Introduction

*criux* is a software framework to investigate Unix clustered systems (Linux,
HP-UX, AIX and Solaris).

In professional environments it is not allowed
to just blindly update an UNIX system without testing this first out on a development
system, pre-production and so on. The criux product allows you to repeat
this process in a consistent way and as many times as you like on any system.
Upgrade-ux understands two states:


The criux uses configuration files which describes what a particular Unix Operating
System requires to be upgraded in the way you want it (or designed it).

Furthermore, many checks can be build-in via adding simple scripts (see chapter 
"Adding your scripts"). We also keep of each run an unique log file, and furthermore, we
keep all reports (text and HTML) with a timestamp.


== criux project
The support and development of the criux project takes place
on Github:

criux website::
    http://www.it3.be/projects/criux.html

Github project::
    http://github.com/gdha/criux/

In case you have questions, ideas or feedback about this document, you
can contact the development team at:
gratien.dhaese@gmail.com.


== Design concepts
Based on experience from previous projects, a set of design principles were
defined, and improved over time:

 - Focus on easy and repeatable tasks
 - Modular design, focused on system administrators
 - For Unix operating systems
 - Few external dependencies (ksh and standard Unix tools)
 - Easy to use and easy to extend

The goal is to make criux as least demanding as possible, it will
require only the applications necessary to fulfill the job criux
is configured for.


== Features and functionality
criux has a wide range of features:

 - Simple to use
 - Is customisable via +local.conf+ configuration file
 - Is written in standard Korn Shell (which makes it highly portable)
 - Is UNIX Operating System independent as OS specific tasks reside in their own directory structures
 - Is easy extendable with your own scripts
 - The +criux+ command leaves a trace in its own log file
 - Has a man page
 - Has user documentation (you are reading it)
 - Does understand Serviceguard clusters (HP-UX and Linux)
 - Can trigger remote alarms, syslog, monitors,...
 - Can do a basis health check of your system - it is all up to you
 - Has excellent support by its author
 - Author is willing to write new workflows (or scripts) for a moderate day rate


